package DB;
// Generated Feb 15, 2015 2:38:13 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Stock generated by hbm2java
 */
@Entity
@Table(name="stock"
    ,catalog="shopping_mall"
)
public class Stock  implements java.io.Serializable {


     private Integer idstock;
     private Catogaries catogaries;
     private SubCatogary subCatogary;
     private Integer qty;
     private Double sellingPrice;
     private Double discountPrice;
     private Date date;
     private String productName;
     private String productCode;
     private String image;
     private String description;
     private Integer status;
     private Set<CartItems> cartItemses = new HashSet<CartItems>(0);
     private Set<OrdersHasStock> ordersHasStocks = new HashSet<OrdersHasStock>(0);
     private Set<SubcriptionHasStock> subcriptionHasStocks = new HashSet<SubcriptionHasStock>(0);
     private Set<WishlistItems> wishlistItemses = new HashSet<WishlistItems>(0);
     private Set<StockHasInvoice> stockHasInvoices = new HashSet<StockHasInvoice>(0);
     private Set<ShopsHasStock> shopsHasStocks = new HashSet<ShopsHasStock>(0);

    public Stock() {
    }

	
    public Stock(Catogaries catogaries, SubCatogary subCatogary) {
        this.catogaries = catogaries;
        this.subCatogary = subCatogary;
    }
    public Stock(Catogaries catogaries, SubCatogary subCatogary, Integer qty, Double sellingPrice, Double discountPrice, Date date, String productName, String productCode, String image, String description, Integer status, Set<CartItems> cartItemses, Set<OrdersHasStock> ordersHasStocks, Set<SubcriptionHasStock> subcriptionHasStocks, Set<WishlistItems> wishlistItemses, Set<StockHasInvoice> stockHasInvoices, Set<ShopsHasStock> shopsHasStocks) {
       this.catogaries = catogaries;
       this.subCatogary = subCatogary;
       this.qty = qty;
       this.sellingPrice = sellingPrice;
       this.discountPrice = discountPrice;
       this.date = date;
       this.productName = productName;
       this.productCode = productCode;
       this.image = image;
       this.description = description;
       this.status = status;
       this.cartItemses = cartItemses;
       this.ordersHasStocks = ordersHasStocks;
       this.subcriptionHasStocks = subcriptionHasStocks;
       this.wishlistItemses = wishlistItemses;
       this.stockHasInvoices = stockHasInvoices;
       this.shopsHasStocks = shopsHasStocks;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idstock", unique=true, nullable=false)
    public Integer getIdstock() {
        return this.idstock;
    }
    
    public void setIdstock(Integer idstock) {
        this.idstock = idstock;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="catogaries_idcatogaries", nullable=false)
    public Catogaries getCatogaries() {
        return this.catogaries;
    }
    
    public void setCatogaries(Catogaries catogaries) {
        this.catogaries = catogaries;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Sub_catogary_idSub_catogary", nullable=false)
    public SubCatogary getSubCatogary() {
        return this.subCatogary;
    }
    
    public void setSubCatogary(SubCatogary subCatogary) {
        this.subCatogary = subCatogary;
    }

    
    @Column(name="qty")
    public Integer getQty() {
        return this.qty;
    }
    
    public void setQty(Integer qty) {
        this.qty = qty;
    }

    
    @Column(name="selling_price", precision=22, scale=0)
    public Double getSellingPrice() {
        return this.sellingPrice;
    }
    
    public void setSellingPrice(Double sellingPrice) {
        this.sellingPrice = sellingPrice;
    }

    
    @Column(name="discount_price", precision=22, scale=0)
    public Double getDiscountPrice() {
        return this.discountPrice;
    }
    
    public void setDiscountPrice(Double discountPrice) {
        this.discountPrice = discountPrice;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date", length=10)
    public Date getDate() {
        return this.date;
    }
    
    public void setDate(Date date) {
        this.date = date;
    }

    
    @Column(name="product_name")
    public String getProductName() {
        return this.productName;
    }
    
    public void setProductName(String productName) {
        this.productName = productName;
    }

    
    @Column(name="product_code")
    public String getProductCode() {
        return this.productCode;
    }
    
    public void setProductCode(String productCode) {
        this.productCode = productCode;
    }

    
    @Column(name="image")
    public String getImage() {
        return this.image;
    }
    
    public void setImage(String image) {
        this.image = image;
    }

    
    @Column(name="description", length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="status")
    public Integer getStatus() {
        return this.status;
    }
    
    public void setStatus(Integer status) {
        this.status = status;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="stock")
    public Set<CartItems> getCartItemses() {
        return this.cartItemses;
    }
    
    public void setCartItemses(Set<CartItems> cartItemses) {
        this.cartItemses = cartItemses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="stock")
    public Set<OrdersHasStock> getOrdersHasStocks() {
        return this.ordersHasStocks;
    }
    
    public void setOrdersHasStocks(Set<OrdersHasStock> ordersHasStocks) {
        this.ordersHasStocks = ordersHasStocks;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="stock")
    public Set<SubcriptionHasStock> getSubcriptionHasStocks() {
        return this.subcriptionHasStocks;
    }
    
    public void setSubcriptionHasStocks(Set<SubcriptionHasStock> subcriptionHasStocks) {
        this.subcriptionHasStocks = subcriptionHasStocks;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="stock")
    public Set<WishlistItems> getWishlistItemses() {
        return this.wishlistItemses;
    }
    
    public void setWishlistItemses(Set<WishlistItems> wishlistItemses) {
        this.wishlistItemses = wishlistItemses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="stock")
    public Set<StockHasInvoice> getStockHasInvoices() {
        return this.stockHasInvoices;
    }
    
    public void setStockHasInvoices(Set<StockHasInvoice> stockHasInvoices) {
        this.stockHasInvoices = stockHasInvoices;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="stock")
    public Set<ShopsHasStock> getShopsHasStocks() {
        return this.shopsHasStocks;
    }
    
    public void setShopsHasStocks(Set<ShopsHasStock> shopsHasStocks) {
        this.shopsHasStocks = shopsHasStocks;
    }




}


